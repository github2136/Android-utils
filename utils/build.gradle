apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

def version = rootProject.ext.android
def lib = rootProject.ext.dependencies

android {
    compileSdkVersion version.compileSdkVersion

    defaultConfig {
        minSdkVersion version.minSdkVersion
        targetSdkVersion version.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    afterEvaluate {
        publishing {
            publications {
                maven(MavenPublication) {
                    afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) } //生成aar包
                    groupId = 'com.github.github2136.Android-utils'
                    artifactId = 'utils'
                    version = '1.0'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation lib['kotlin-stdlib']
    implementation lib['kotlin-ktx']
    compileOnly lib['android-appcompat']
    compileOnly lib['android-recyclerview']
    compileOnly lib['gson']

    androidTestImplementation lib['android-test']
    testImplementation lib['junit']
    androidTestImplementation lib['espresso']
}
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
